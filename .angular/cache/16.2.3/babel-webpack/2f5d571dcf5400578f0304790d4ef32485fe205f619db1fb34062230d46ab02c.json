{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../app-config\";\nexport class ApiService {\n  constructor(http, appConfig) {\n    this.http = http;\n    this.appConfig = appConfig;\n  }\n  get(path, options) {\n    const url = this.getRequestUrl(path);\n    fetch(url).then(response => response.json()).then(json => console.log(json));\n    // return this.http.get(url, options).toPromise();\n  }\n\n  post(path, body, options) {\n    const url = this.getRequestUrl(path);\n    return this.http.post(url, body, options).toPromise();\n  }\n  put(path, body, options) {\n    const url = this.getRequestUrl(path);\n    return this.http.put(url, body, options).toPromise();\n  }\n  patch(path, body, options) {\n    const url = this.getRequestUrl(path);\n    return this.http.patch(url, body, options).toPromise();\n  }\n  getRequestUrl(path) {\n    return this.appConfig.apiEndpoint + path.replace(/^\\//, '');\n  }\n}\n_class = ApiService;\n_class.ɵfac = function ApiService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AppConfig));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["ApiService","constructor","http","appConfig","get","path","options","url","getRequestUrl","fetch","then","response","json","console","log","post","body","toPromise","put","patch","apiEndpoint","replace","i0","ɵɵinject","i1","HttpClient","i2","AppConfig","factory","ɵfac","providedIn"],"sources":["/home/jaidev/WebDev/rindus-app/src/app/services/api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AppConfig } from '../app-config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(\n    private http: HttpClient,\n    private appConfig: AppConfig\n  ) { }\n\n  get(path: string, options?: object) {\n    const url = this.getRequestUrl(path);\n    fetch(url)\n    .then((response) => response.json())\n    .then((json) => console.log(json));\n    // return this.http.get(url, options).toPromise();\n  }\n\n  post(path: string, body?: any, options?: object) {\n    const url = this.getRequestUrl(path);\n    return this.http.post(url, body, options).toPromise();\n  }\n\n  put(path: string, body?: any, options?: object) {\n    const url = this.getRequestUrl(path);\n    return this.http.put(url, body, options).toPromise();\n  }\n\n  patch(path: string, body?: any, options?: object) {\n    const url = this.getRequestUrl(path);\n    return this.http.patch(url, body, options).toPromise();\n  }\n\n  getRequestUrl(path: string) {\n    return this.appConfig.apiEndpoint + path.replace(/^\\//, '');\n  }\n\n}\n"],"mappings":";;;;AAOA,OAAM,MAAOA,UAAU;EAErBC,YACUC,IAAgB,EAChBC,SAAoB;IADpB,KAAAD,IAAI,GAAJA,IAAI;IACJ,KAAAC,SAAS,GAATA,SAAS;EACf;EAEJC,GAAGA,CAACC,IAAY,EAAEC,OAAgB;IAChC,MAAMC,GAAG,GAAG,IAAI,CAACC,aAAa,CAACH,IAAI,CAAC;IACpCI,KAAK,CAACF,GAAG,CAAC,CACTG,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEE,IAAI,IAAKC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC;IAClC;EACF;;EAEAG,IAAIA,CAACV,IAAY,EAAEW,IAAU,EAAEV,OAAgB;IAC7C,MAAMC,GAAG,GAAG,IAAI,CAACC,aAAa,CAACH,IAAI,CAAC;IACpC,OAAO,IAAI,CAACH,IAAI,CAACa,IAAI,CAACR,GAAG,EAAES,IAAI,EAAEV,OAAO,CAAC,CAACW,SAAS,EAAE;EACvD;EAEAC,GAAGA,CAACb,IAAY,EAAEW,IAAU,EAAEV,OAAgB;IAC5C,MAAMC,GAAG,GAAG,IAAI,CAACC,aAAa,CAACH,IAAI,CAAC;IACpC,OAAO,IAAI,CAACH,IAAI,CAACgB,GAAG,CAACX,GAAG,EAAES,IAAI,EAAEV,OAAO,CAAC,CAACW,SAAS,EAAE;EACtD;EAEAE,KAAKA,CAACd,IAAY,EAAEW,IAAU,EAAEV,OAAgB;IAC9C,MAAMC,GAAG,GAAG,IAAI,CAACC,aAAa,CAACH,IAAI,CAAC;IACpC,OAAO,IAAI,CAACH,IAAI,CAACiB,KAAK,CAACZ,GAAG,EAAES,IAAI,EAAEV,OAAO,CAAC,CAACW,SAAS,EAAE;EACxD;EAEAT,aAAaA,CAACH,IAAY;IACxB,OAAO,IAAI,CAACF,SAAS,CAACiB,WAAW,GAAGf,IAAI,CAACgB,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;EAC7D;;SAhCWrB,UAAU;;mBAAVA,MAAU,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,SAAA;AAAA;;SAAV3B,MAAU;EAAA4B,OAAA,EAAV5B,MAAU,CAAA6B,IAAA;EAAAC,UAAA,EAFT;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}