{"ast":null,"code":"import _asyncToGenerator from \"/home/jaidev/WebDev/rindus-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar _class;\nimport { PostModel } from '../models/post.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./api.service\";\nexport class PostService {\n  constructor(apiService) {\n    this.apiService = apiService;\n  }\n  getPosts(params = {}) {\n    return _asyncToGenerator(function* () {\n      fetch('/posts/1/comments').then(response => response.json()).then(json => console.log(json));\n      // const path = '/posts/';\n      // const response: any = await this.apiService.get(path, {params});\n      // return response.map((post: PostModel) => new PostModel(post));\n    })();\n  }\n\n  getPost(id) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const path = `/posts/${id}/`;\n      const response = yield _this.apiService.get(path);\n      return new PostModel(response);\n    })();\n  }\n  createPost(data) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const path = `/posts/`;\n      const response = yield _this2.apiService.post(path, data);\n      return true;\n    })();\n  }\n  updatePost(id) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const path = `/posts/${id}/`;\n      const response = yield _this3.apiService.put(path);\n      return new PostModel(response);\n    })();\n  }\n  deletePost(id) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const path = `/posts/${id}/`;\n      const response = yield _this4.apiService.delete(path);\n      return new PostModel(response);\n    })();\n  }\n}\n_class = PostService;\n_class.ɵfac = function PostService_Factory(t) {\n  return new (t || _class)(i0.ɵɵinject(i1.ApiService));\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["PostModel","PostService","constructor","apiService","getPosts","params","_asyncToGenerator","fetch","then","response","json","console","log","getPost","id","_this","path","get","createPost","data","_this2","post","updatePost","_this3","put","deletePost","_this4","delete","i0","ɵɵinject","i1","ApiService","factory","ɵfac","providedIn"],"sources":["/home/jaidev/WebDev/rindus-app/src/app/services/post.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { PostModel } from '../models/post.model';\nimport { ApiService } from './api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  constructor(\n    private apiService: ApiService,\n  ) { }\n\n  async getPosts(params: any = {}): Promise<any> {\n    fetch('/posts/1/comments')\n  .then((response) => response.json())\n  .then((json) => console.log(json));\n\n    // const path = '/posts/';\n    // const response: any = await this.apiService.get(path, {params});\n    // return response.map((post: PostModel) => new PostModel(post));\n  }\n\n  async getPost(id: number): Promise<PostModel> {\n    const path = `/posts/${id}/`;\n    const response: any = await this.apiService.get(path);\n    return new PostModel(response);\n  }\n\n  async createPost(data: PostModel): Promise<boolean> {\n    const path = `/posts/`;\n    const response: any = await this.apiService.post(path, data);\n    return true;\n  }\n\n  async updatePost(id: number): Promise<PostModel> {\n    const path = `/posts/${id}/`;\n    const response: any = await this.apiService.put(path);\n    return new PostModel(response);\n  }\n\n  async deletePost(id: number): Promise<PostModel> {\n    const path = `/posts/${id}/`;\n    const response: any = await this.apiService.delete(path);\n    return new PostModel(response);\n  }\n}\n"],"mappings":";;AACA,SAASA,SAAS,QAAQ,sBAAsB;;;AAMhD,OAAM,MAAOC,WAAW;EAEtBC,YACUC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAChB;EAEEC,QAAQA,CAACC,MAAA,GAAc,EAAE;IAAA,OAAAC,iBAAA;MAC7BC,KAAK,CAAC,mBAAmB,CAAC,CAC3BC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEE,IAAI,IAAKC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC;MAEhC;MACA;MACA;IAAA;EACF;;EAEMG,OAAOA,CAACC,EAAU;IAAA,IAAAC,KAAA;IAAA,OAAAT,iBAAA;MACtB,MAAMU,IAAI,GAAG,UAAUF,EAAE,GAAG;MAC5B,MAAML,QAAQ,SAAcM,KAAI,CAACZ,UAAU,CAACc,GAAG,CAACD,IAAI,CAAC;MACrD,OAAO,IAAIhB,SAAS,CAACS,QAAQ,CAAC;IAAC;EACjC;EAEMS,UAAUA,CAACC,IAAe;IAAA,IAAAC,MAAA;IAAA,OAAAd,iBAAA;MAC9B,MAAMU,IAAI,GAAG,SAAS;MACtB,MAAMP,QAAQ,SAAcW,MAAI,CAACjB,UAAU,CAACkB,IAAI,CAACL,IAAI,EAAEG,IAAI,CAAC;MAC5D,OAAO,IAAI;IAAC;EACd;EAEMG,UAAUA,CAACR,EAAU;IAAA,IAAAS,MAAA;IAAA,OAAAjB,iBAAA;MACzB,MAAMU,IAAI,GAAG,UAAUF,EAAE,GAAG;MAC5B,MAAML,QAAQ,SAAcc,MAAI,CAACpB,UAAU,CAACqB,GAAG,CAACR,IAAI,CAAC;MACrD,OAAO,IAAIhB,SAAS,CAACS,QAAQ,CAAC;IAAC;EACjC;EAEMgB,UAAUA,CAACX,EAAU;IAAA,IAAAY,MAAA;IAAA,OAAApB,iBAAA;MACzB,MAAMU,IAAI,GAAG,UAAUF,EAAE,GAAG;MAC5B,MAAML,QAAQ,SAAciB,MAAI,CAACvB,UAAU,CAACwB,MAAM,CAACX,IAAI,CAAC;MACxD,OAAO,IAAIhB,SAAS,CAACS,QAAQ,CAAC;IAAC;EACjC;;SAtCWR,WAAW;;mBAAXA,MAAW,EAAA2B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;;SAAX9B,MAAW;EAAA+B,OAAA,EAAX/B,MAAW,CAAAgC,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}